import { Component, Input, Output, EventEmitter } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

var _c0 = ["ng2-carouselamos", ""];
function Ng2Carouselamos_4_ng_template_0_Template(rf, ctx) { }
var _c1 = function (a0, a1, a2) { return { $implicit: a0, index: a1, selectedIndex: a2 }; };
function Ng2Carouselamos_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, Ng2Carouselamos_4_ng_template_0_Template, 0, 0, "ng-template", 6);
} if (rf & 2) {
    var item_r3 = ctx.$implicit;
    var i_r4 = ctx.index;
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r1.$item)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction3(2, _c1, item_r3, i_r4, ctx_r1.childIndex));
} }
function Ng2Carouselamos_div_5_button_1_ng_template_1_Template(rf, ctx) { }
function Ng2Carouselamos_div_5_button_1_Template(rf, ctx) { if (rf & 1) {
    var _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 9);
    ɵngcc0.ɵɵlistener("click", function Ng2Carouselamos_div_5_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); var ctx_r9 = ɵngcc0.ɵɵnextContext(2); var _r0 = ɵngcc0.ɵɵreference(3); return ctx_r9.scroll(false, _r0); });
    ɵngcc0.ɵɵtemplate(1, Ng2Carouselamos_div_5_button_1_ng_template_1_Template, 0, 0, "ng-template", 10);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("disabled", ctx_r6.amount >= 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r6.$prev);
} }
function Ng2Carouselamos_div_5_button_2_ng_template_1_Template(rf, ctx) { }
function Ng2Carouselamos_div_5_button_2_Template(rf, ctx) { if (rf & 1) {
    var _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 9);
    ɵngcc0.ɵɵlistener("click", function Ng2Carouselamos_div_5_button_2_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); var ctx_r12 = ɵngcc0.ɵɵnextContext(2); var _r0 = ɵngcc0.ɵɵreference(3); return ctx_r12.scroll(true, _r0); });
    ɵngcc0.ɵɵtemplate(1, Ng2Carouselamos_div_5_button_2_ng_template_1_Template, 0, 0, "ng-template", 10);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    var _r0 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵproperty("disabled", ctx_r7.amount <= -(_r0.scrollWidth - ctx_r7.width));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r7.$next);
} }
function Ng2Carouselamos_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 7);
    ɵngcc0.ɵɵtemplate(1, Ng2Carouselamos_div_5_button_1_Template, 2, 2, "button", 8);
    ɵngcc0.ɵɵtemplate(2, Ng2Carouselamos_div_5_button_2_Template, 2, 2, "button", 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.$prev);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.$next);
} }
var isEqual = require('lodash.isequal');
/*
  *
  * @param() items - List of items to belong in carousel
  * @param() width - Size of window(view) to show
  * @param() $prev - Template for previous button
  * @param() $next - Template for next button
  * @param() $item - Template for the item
*/
var Ng2Carouselamos = (function () {
    function Ng2Carouselamos() {
        this.items = [];
        this.width = 500;
        this.onSelectedItem = new EventEmitter();
        this.childIndex = 0;
        this.amount = 0;
        this.startPress = 0;
        this.lastX = 0;
    }
    Ng2Carouselamos.prototype.onMousedown = function (e) {
        if (e.which === 1) {
            this.startPress = e.clientX;
            this.lastX = this.amount;
        }
    };
    Ng2Carouselamos.prototype.onTouchdown = function (e) {
        if (navigator.userAgent.indexOf('Android') >= 0)
            e.preventDefault();
        this.startPress = e.targetTouches[0].clientX;
        this.lastX = this.amount;
    };
    Ng2Carouselamos.prototype.onMousemove = function (e, maxWidth) {
        if (e.which === 1) {
            var amount = this.lastX - (this.startPress - e.clientX);
            if (amount > 0 || amount < -(maxWidth - this.width))
                return;
            this.amount = amount;
        }
    };
    Ng2Carouselamos.prototype.onTouchmove = function (e, maxWidth) {
        if (navigator.userAgent.indexOf('Android') >= 0)
            e.preventDefault();
        var amount = this.lastX - (this.startPress - e.targetTouches[0].clientX);
        if (amount > 0 || amount < -(maxWidth - this.width))
            return;
        this.amount = amount;
    };
    Ng2Carouselamos.prototype.onMouseup = function (e, elem) {
        if (e.which === 1) {
            this.startPress = 0;
            this.snap(elem);
        }
    };
    Ng2Carouselamos.prototype.onTouchup = function (e, elem) {
        if (navigator.userAgent.indexOf('Android') >= 0)
            e.preventDefault();
        this.startPress = 0;
        this.snap(elem);
    };
    Ng2Carouselamos.prototype.snap = function (elem) {
        var counter = 0;
        var lastVal = 0;
        for (var i = 0; i < this.items.length; i++) {
            var el = elem.children[i];
            var style = el.currentStyle || window.getComputedStyle(el);
            counter += el.offsetWidth + (parseFloat(style.marginLeft) + parseFloat(style.marginRight));
            if (this.amount <= lastVal && this.amount >= -counter) {
                this.amount = -lastVal;
                this.childIndex = i;
                this.onSelectedItem.emit({ item: this.items[this.childIndex], index: this.childIndex, first: false });
                return;
            }
            lastVal = counter;
        }
        return counter;
    };
    Ng2Carouselamos.prototype.scroll = function (forward, elem) {
        this.childIndex += forward ? 1 : -1;
        this.onSelectedItem.emit({ item: this.items[this.childIndex], index: this.childIndex, first: false });
        this.amount = -(this.calcScroll(elem));
    };
    Ng2Carouselamos.prototype.calcScroll = function (elem) {
        var counter = 0;
        for (var i = this.childIndex - 1; i >= 0; i--) {
            var el = elem.children[i];
            var style = el.currentStyle || window.getComputedStyle(el);
            counter += el.offsetWidth + (parseFloat(style.marginLeft) + parseFloat(style.marginRight));
        }
        return counter;
    };
    Ng2Carouselamos.prototype.ngOnChanges = function (changes) {
        if (changes.items && !isEqual(changes.items.previousValue, changes.items.currentValue)) {
            if (changes.items.firstChange) {
                this.onSelectedItem.emit({ item: this.items[this.childIndex], index: this.childIndex, first: true });
            }
            this.amount = 0;
        }
    };
Ng2Carouselamos.ɵfac = function Ng2Carouselamos_Factory(t) { return new (t || Ng2Carouselamos)(); };
Ng2Carouselamos.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: Ng2Carouselamos, selectors: [["", "ng2-carouselamos", ""]], inputs: { items: "items", width: "width", $prev: "$prev", $next: "$next", $item: "$item" }, outputs: { onSelectedItem: "onSelectedItem" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c0, decls: 6, vars: 13, consts: [[1, "ng2-carouselamos-container"], [1, "ng2-carouselamos-wrapper", 3, "mousedown", "touchstart", "mousemove", "touchmove", "mouseup", "mouseleave", "touchend"], [1, "ng2-carouselamos"], ["list", ""], [4, "ngFor", "ngForOf"], ["class", "controls", 4, "ngIf"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "controls"], ["type", "button", 3, "disabled", "click", 4, "ngIf"], ["type", "button", 3, "disabled", "click"], [3, "ngTemplateOutlet"]], template: function Ng2Carouselamos_Template(rf, ctx) { if (rf & 1) {
        var _r14 = ɵngcc0.ɵɵgetCurrentView();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵlistener("mousedown", function Ng2Carouselamos_Template_div_mousedown_1_listener($event) { return ctx.onMousedown($event); })("touchstart", function Ng2Carouselamos_Template_div_touchstart_1_listener($event) { return ctx.onTouchdown($event); })("mousemove", function Ng2Carouselamos_Template_div_mousemove_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); var _r0 = ɵngcc0.ɵɵreference(3); return ctx.onMousemove($event, _r0.scrollWidth); })("touchmove", function Ng2Carouselamos_Template_div_touchmove_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); var _r0 = ɵngcc0.ɵɵreference(3); return ctx.onTouchmove($event, _r0.scrollWidth); })("mouseup", function Ng2Carouselamos_Template_div_mouseup_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); var _r0 = ɵngcc0.ɵɵreference(3); return ctx.onMouseup($event, _r0); })("mouseleave", function Ng2Carouselamos_Template_div_mouseleave_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); var _r0 = ɵngcc0.ɵɵreference(3); return ctx.onMouseup($event, _r0); })("touchend", function Ng2Carouselamos_Template_div_touchend_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); var _r0 = ɵngcc0.ɵɵreference(3); return ctx.onTouchup($event, _r0); });
        ɵngcc0.ɵɵelementStart(2, "div", 2, 3);
        ɵngcc0.ɵɵtemplate(4, Ng2Carouselamos_4_Template, 1, 6, undefined, 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, Ng2Carouselamos_div_5_Template, 3, 2, "div", 5);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleProp("width", ctx.width + "px");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleProp("transition", ctx.startPress > 0 ? "none" : "-webkit-transform 1s")("webkit-transition", ctx.startPress > 0 ? "none" : "-webkit-transform 1s")("transform", "translateX(" + ctx.amount + "px)")("webkit-transform", "translateX(" + ctx.amount + "px)");
        ɵngcc0.ɵɵattribute("startPress", ctx.startPress);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.items);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.$prev || ctx.$next);
    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet], styles: [".ng2-carouselamos-container[_ngcontent-%COMP%]{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.ng2-carouselamos-wrapper[_ngcontent-%COMP%]{overflow:hidden}.ng2-carouselamos[_ngcontent-%COMP%]{display:-webkit-box;display:-ms-flexbox;display:flex;transition:transform 1s, -webkit-transform 1s}.controls[_ngcontent-%COMP%]{pointer-events:none;position:absolute;display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;top:50%;left:0;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.controls[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{pointer-events:all;background:transparent;border:0}"] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Ng2Carouselamos, [{
        type: Component,
        args: [{
                selector: '[ng2-carouselamos]',
                styles: ["\n    .ng2-carouselamos-container{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.ng2-carouselamos-wrapper{overflow:hidden}.ng2-carouselamos{display:-webkit-box;display:-ms-flexbox;display:flex;transition:transform 1s, -webkit-transform 1s}.controls{pointer-events:none;position:absolute;display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;top:50%;left:0;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.controls button{pointer-events:all;background:transparent;border:0}\n  "],
                template: "\n    <div class=\"ng2-carouselamos-container\">\n      <div\n        class=\"ng2-carouselamos-wrapper\"\n        [style.width]=\"width + 'px'\"\n        (mousedown)=\"onMousedown($event)\"\n        (touchstart)=\"onTouchdown($event)\"\n        (mousemove)=\"onMousemove($event, list.scrollWidth)\"\n        (touchmove)=\"onTouchmove($event, list.scrollWidth)\"\n        (mouseup)=\"onMouseup($event, list)\"\n        (mouseleave)=\"onMouseup($event, list)\"\n        (touchend)=\"onTouchup($event, list)\"\n      >\n        <div\n          class=\"ng2-carouselamos\"\n          [attr.startPress]=\"startPress\"\n          [style.transition]=\"startPress > 0 ? 'none' : '-webkit-transform 1s'\"\n          [style.webkitTransition]=\"startPress > 0 ? 'none' : '-webkit-transform 1s'\"\n          [style.transform]=\"'translateX('+amount+'px)'\"\n          [style.webkitTransform]=\"'translateX('+amount+'px)'\"\n          #list\n        >\n          <ng-template\n            *ngFor=\"let item of items; let i = index\"\n            [ngTemplateOutlet]=\"$item\"\n            [ngTemplateOutletContext]=\"{$implicit: item, index: i, selectedIndex: childIndex}\"\n          ></ng-template>\n        </div>\n      </div>\n      <div\n        class=\"controls\"\n        *ngIf=\"$prev || $next\"\n      >\n        <button\n          type=\"button\"\n          *ngIf=\"$prev\"\n          (click)=\"scroll(false, list)\"\n          [disabled]=\"amount >= 0\"\n        >\n          <ng-template\n            [ngTemplateOutlet]=\"$prev\"\n          ></ng-template>\n        </button>\n        <button\n          type=\"button\"\n          *ngIf=\"$next\"\n          (click)=\"scroll(true, list)\"\n          [disabled]=\"amount <= -(list.scrollWidth-width)\"\n        >\n            <ng-template\n              [ngTemplateOutlet]=\"$next\"\n            ></ng-template>\n        </button>\n      </div>\n    </div>\n  "
            }]
    }], function () { return []; }, { items: [{
            type: Input
        }], width: [{
            type: Input
        }], onSelectedItem: [{
            type: Output
        }], $prev: [{
            type: Input
        }], $next: [{
            type: Input
        }], $item: [{
            type: Input
        }] }); })();
    return Ng2Carouselamos;
}());
export { Ng2Carouselamos };
/** @nocollapse */
Ng2Carouselamos.ctorParameters = function () { return []; };
Ng2Carouselamos.propDecorators = {
    'items': [{ type: Input },],
    'width': [{ type: Input },],
    '$prev': [{ type: Input },],
    '$next': [{ type: Input },],
    '$item': [{ type: Input },],
    'onSelectedItem': [{ type: Output },],
};

//# sourceMappingURL=ng2-carouselamos.component.js.map